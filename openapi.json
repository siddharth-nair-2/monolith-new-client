{
    "openapi": "3.1.0",
    "info": {
        "title": "Monolith AI",
        "description": "RAG API for document processing and retrieval",
        "version": "0.1.0"
    },
    "paths": {
        "/api/v1/auth/signup": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User Registration",
                "description": "Register a new user with smart routing for company creation vs joining existing tenant",
                "operationId": "signup_api_v1_auth_signup_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSignupRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User Login",
                "description": "Authenticate user with email and password, returns JWT token and user info",
                "operationId": "login_api_v1_auth_login_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLoginRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh Access Token",
                "description": "Refresh access token using refresh token",
                "operationId": "refresh_token_api_v1_auth_refresh_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshTokenRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RefreshTokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User Logout",
                "description": "Logout current user and invalidate session",
                "operationId": "logout_api_v1_auth_logout_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response Logout Api V1 Auth Logout Post"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/auth/me": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get Current User",
                "description": "Get detailed information about the currently authenticated user",
                "operationId": "get_current_user_info_api_v1_auth_me_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/auth/forgot-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Forgot Password",
                "description": "Send password reset email to user if account exists",
                "operationId": "forgot_password_api_v1_auth_forgot_password_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/src__api__v1__endpoints__auth__MessageResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/reset-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset Password",
                "description": "Reset user password using token from email (typically handled by Supabase redirect)",
                "operationId": "reset_password_api_v1_auth_reset_password_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/src__api__v1__endpoints__auth__MessageResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/change-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Change Password",
                "description": "Change password for authenticated user (requires current password verification)",
                "operationId": "change_password_api_v1_auth_change_password_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/src__api__v1__endpoints__auth__MessageResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/auth/change-email": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Change Email",
                "description": "Request email change for authenticated user (sends confirmation emails)",
                "operationId": "change_email_api_v1_auth_change_email_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeEmailRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/src__api__v1__endpoints__auth__MessageResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/auth/resend-verification": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Resend Email Verification",
                "description": "Resend email verification for unverified users",
                "operationId": "resend_verification_api_v1_auth_resend_verification_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/src__api__v1__endpoints__auth__MessageResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/check-domain": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Check Email Domain",
                "description": "Check if an email domain already has an associated tenant/company workspace",
                "operationId": "check_domain_api_v1_auth_check_domain_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckDomainRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckDomainResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/invites/send": {
            "post": {
                "tags": [
                    "Invites"
                ],
                "summary": "Send Team Invites",
                "description": "Send invitations to join the organization (admin only, max 10 emails per batch)",
                "operationId": "send_invites_api_v1_invites_send_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendInviteRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SendInviteResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/invites/validate": {
            "get": {
                "tags": [
                    "Invites"
                ],
                "summary": "Validate Invite Token",
                "description": "Validate an invite token and return invite details if valid",
                "operationId": "validate_invite_api_v1_invites_validate_get",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidateInviteResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/invites/list": {
            "get": {
                "tags": [
                    "Invites"
                ],
                "summary": "List Organization Invites",
                "description": "List all invites for the current organization (admin only)",
                "operationId": "list_invites_api_v1_invites_list_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "include_accepted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Include Accepted"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InviteResponse"
                                    },
                                    "title": "Response List Invites Api V1 Invites List Get"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/invites/{invite_id}": {
            "delete": {
                "tags": [
                    "Invites"
                ],
                "summary": "Revoke Invite",
                "description": "Revoke (delete) a pending invite (admin only)",
                "operationId": "revoke_invite_api_v1_invites__invite_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "invite_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Invite Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/src__api__v1__endpoints__invites__MessageResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/invites/resend/{invite_id}": {
            "post": {
                "tags": [
                    "Invites"
                ],
                "summary": "Resend Invite",
                "description": "Resend an existing invite (admin only, extends expiry if needed)",
                "operationId": "resend_invite_api_v1_invites_resend__invite_id__post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "invite_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Invite Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/src__api__v1__endpoints__invites__MessageResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/onboarding/status": {
            "get": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Get Onboarding Status",
                "description": "Get current onboarding progress and recommendations for the user",
                "operationId": "get_onboarding_status_api_v1_onboarding_status_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OnboardingStatusResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/onboarding/complete-step": {
            "post": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Complete Onboarding Step",
                "description": "Mark an onboarding step as complete",
                "operationId": "complete_onboarding_step_api_v1_onboarding_complete_step_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompleteStepRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompleteStepResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/onboarding/steps": {
            "get": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Get Available Steps",
                "description": "Get all available onboarding steps and their definitions",
                "operationId": "get_available_steps_api_v1_onboarding_steps_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    "type": "array",
                                    "title": "Response Get Available Steps Api V1 Onboarding Steps Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/onboarding/skip-step": {
            "post": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Skip Onboarding Step",
                "description": "Skip an optional onboarding step",
                "operationId": "skip_onboarding_step_api_v1_onboarding_skip_step_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompleteStepRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompleteStepResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/team/members": {
            "get": {
                "tags": [
                    "Team Management"
                ],
                "summary": "Get Team Members",
                "description": "Get all active team members and pending invites for the current organization",
                "operationId": "get_team_members_api_v1_team_members_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/team/members/{member_id}/role": {
            "patch": {
                "tags": [
                    "Team Management"
                ],
                "summary": "Update Member Role",
                "description": "Update a team member's role (admin only, cannot change own role or demote last admin)",
                "operationId": "update_member_role_api_v1_team_members__member_id__role_patch",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "member_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Member Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMemberRoleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/src__api__v1__endpoints__team__MessageResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/team/members/{member_id}": {
            "delete": {
                "tags": [
                    "Team Management"
                ],
                "summary": "Remove Team Member",
                "description": "Remove a team member from the organization (admin only, soft delete via deactivation)",
                "operationId": "remove_team_member_api_v1_team_members__member_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "member_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Member Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/src__api__v1__endpoints__team__MessageResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/team/stats": {
            "get": {
                "tags": [
                    "Team Management"
                ],
                "summary": "Get Team Statistics",
                "description": "Get team member counts by role and pending invites count",
                "operationId": "get_team_stats_api_v1_team_stats_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamStatsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/users/profile": {
            "get": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Get User Profile",
                "description": "Get the current user's complete profile including tenant information",
                "operationId": "get_user_profile_api_v1_users_profile_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfileResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Update User Profile",
                "description": "Update the current user's profile information (first name, last name)",
                "operationId": "update_user_profile_api_v1_users_profile_patch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProfileRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfileResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/users/upload-avatar": {
            "post": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Upload User Avatar",
                "description": "Upload a user avatar image (JPEG, PNG, WebP formats, max 5MB)",
                "operationId": "upload_avatar_api_v1_users_upload_avatar_post",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_avatar_api_v1_users_upload_avatar_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/src__api__v1__endpoints__users__MessageResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/users/avatar": {
            "delete": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Delete User Avatar",
                "description": "Delete the current user's avatar image",
                "operationId": "delete_avatar_api_v1_users_avatar_delete",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/src__api__v1__endpoints__users__MessageResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/users/account": {
            "delete": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Delete User Account",
                "description": "Delete the current user's account (GDPR compliance). Requires email confirmation.",
                "operationId": "delete_user_account_api_v1_users_account_delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteAccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/src__api__v1__endpoints__users__MessageResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/health": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "Health Check",
                "description": "Check the health status of all system components (database, vector store, AI services)",
                "operationId": "health_check_api_v1_health_get",
                "responses": {
                    "200": {
                        "description": "System health status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthCheckResponse"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service unhealthy or degraded"
                    }
                }
            }
        },
        "/api/v1/database/connection": {
            "get": {
                "tags": [
                    "Health",
                    "Health",
                    "Database"
                ],
                "summary": "Database Connection Status",
                "description": "Get database connection manager statistics and health information",
                "operationId": "database_connection_status_api_v1_database_connection_get",
                "responses": {
                    "200": {
                        "description": "Database connection status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DatabaseConnectionStatusResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error getting database status"
                    }
                }
            }
        },
        "/api/v1/upload": {
            "post": {
                "tags": [
                    "Upload"
                ],
                "summary": "Upload Document",
                "description": "Upload a single document for processing. Supports PDF, DOCX, CSV, TXT and other formats.",
                "operationId": "upload_file_endpoint_api_v1_upload_post",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_file_endpoint_api_v1_upload_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "File size exceeds maximum allowed"
                    },
                    "415": {
                        "description": "File type not supported"
                    },
                    "422": {
                        "description": "File processing failed"
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/upload/batch": {
            "post": {
                "tags": [
                    "Upload"
                ],
                "summary": "Batch Upload Documents",
                "description": "Upload multiple documents at once. Each file is processed independently.",
                "operationId": "batch_upload_endpoint_api_v1_upload_batch_post",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_batch_upload_endpoint_api_v1_upload_batch_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BatchUploadResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "One or more files exceed size limit"
                    },
                    "415": {
                        "description": "One or more files have unsupported type"
                    },
                    "422": {
                        "description": "Processing Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessingErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/upload/task/{task_id}": {
            "get": {
                "tags": [
                    "Upload"
                ],
                "summary": "Check Task Status",
                "description": "Check the processing status of a document upload task",
                "operationId": "check_task_status_api_v1_upload_task__task_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Task Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskStatusResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/documents": {
            "get": {
                "tags": [
                    "Documents Management"
                ],
                "summary": "List Documents",
                "description": "Get paginated list of documents with advanced filtering and sorting options",
                "operationId": "list_documents_api_v1_documents_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Page number",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Items per page",
                            "default": 20,
                            "title": "Size"
                        },
                        "description": "Items per page"
                    },
                    {
                        "name": "source_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by source type (single value, deprecated - use source_types)",
                            "title": "Source Type"
                        },
                        "description": "Filter by source type (single value, deprecated - use source_types)"
                    },
                    {
                        "name": "source_types",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by source types (multiple allowed)",
                            "title": "Source Types"
                        },
                        "description": "Filter by source types (multiple allowed)"
                    },
                    {
                        "name": "processing_status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by processing status (single value, deprecated - use processing_statuses)",
                            "title": "Processing Status"
                        },
                        "description": "Filter by processing status (single value, deprecated - use processing_statuses)"
                    },
                    {
                        "name": "processing_statuses",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by processing statuses (multiple allowed)",
                            "title": "Processing Statuses"
                        },
                        "description": "Filter by processing statuses (multiple allowed)"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Search in document names",
                            "title": "Search"
                        },
                        "description": "Search in document names"
                    },
                    {
                        "name": "exclude_failed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "Exclude documents with FAILED status (default: true)",
                            "default": true,
                            "title": "Exclude Failed"
                        },
                        "description": "Exclude documents with FAILED status (default: true)"
                    },
                    {
                        "name": "created_after",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter documents created after this date",
                            "title": "Created After"
                        },
                        "description": "Filter documents created after this date"
                    },
                    {
                        "name": "created_before",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter documents created before this date",
                            "title": "Created Before"
                        },
                        "description": "Filter documents created before this date"
                    },
                    {
                        "name": "updated_after",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter documents updated after this date",
                            "title": "Updated After"
                        },
                        "description": "Filter documents updated after this date"
                    },
                    {
                        "name": "updated_before",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter documents updated before this date",
                            "title": "Updated Before"
                        },
                        "description": "Filter documents updated before this date"
                    },
                    {
                        "name": "file_created_after",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by file creation date (after)",
                            "title": "File Created After"
                        },
                        "description": "Filter by file creation date (after)"
                    },
                    {
                        "name": "file_created_before",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by file creation date (before)",
                            "title": "File Created Before"
                        },
                        "description": "Filter by file creation date (before)"
                    },
                    {
                        "name": "extensions",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by file extensions (e.g., pdf, docx)",
                            "title": "Extensions"
                        },
                        "description": "Filter by file extensions (e.g., pdf, docx)"
                    },
                    {
                        "name": "mime_types",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by MIME types",
                            "title": "Mime Types"
                        },
                        "description": "Filter by MIME types"
                    },
                    {
                        "name": "min_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer",
                                    "minimum": 0
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Minimum file size in bytes",
                            "title": "Min Size"
                        },
                        "description": "Minimum file size in bytes"
                    },
                    {
                        "name": "max_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer",
                                    "minimum": 0
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Maximum file size in bytes",
                            "title": "Max Size"
                        },
                        "description": "Maximum file size in bytes"
                    },
                    {
                        "name": "author",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by document author",
                            "title": "Author"
                        },
                        "description": "Filter by document author"
                    },
                    {
                        "name": "keywords",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by keywords (must contain all)",
                            "title": "Keywords"
                        },
                        "description": "Filter by keywords (must contain all)"
                    },
                    {
                        "name": "uploaded_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by uploader user ID",
                            "title": "Uploaded By"
                        },
                        "description": "Filter by uploader user ID"
                    },
                    {
                        "name": "category_ids",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by category IDs",
                            "title": "Category Ids"
                        },
                        "description": "Filter by category IDs"
                    },
                    {
                        "name": "topic_ids",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by topic IDs",
                            "title": "Topic Ids"
                        },
                        "description": "Filter by topic IDs"
                    },
                    {
                        "name": "has_chunks",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter documents with/without chunks",
                            "title": "Has Chunks"
                        },
                        "description": "Filter documents with/without chunks"
                    },
                    {
                        "name": "has_errors",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter documents with/without errors",
                            "title": "Has Errors"
                        },
                        "description": "Filter documents with/without errors"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "^(created_at|updated_at|name|file_size_bytes|file_created_at|file_modified_at)$",
                            "description": "Sort field",
                            "default": "created_at",
                            "title": "Sort By"
                        },
                        "description": "Sort field"
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "^(asc|desc)$",
                            "description": "Sort order",
                            "default": "desc",
                            "title": "Sort Order"
                        },
                        "description": "Sort order"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/documents/{document_id}": {
            "get": {
                "tags": [
                    "Documents Management"
                ],
                "summary": "Get Document Details",
                "description": "Get complete document metadata and processing details including chunk count and ACL permissions",
                "operationId": "get_document_detail_api_v1_documents__document_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "document_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Document Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentDetailResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Documents Management"
                ],
                "summary": "Delete Document",
                "description": "Delete document and all associated data including vectors, chunks, and storage files",
                "operationId": "delete_document_api_v1_documents__document_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "document_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Document Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/src__api__v1__models__responses__MessageResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/documents/bulk": {
            "post": {
                "tags": [
                    "Documents Management"
                ],
                "summary": "Bulk Document Operations",
                "description": "Perform bulk operations on multiple documents (delete, update_acl, reprocess)",
                "operationId": "bulk_document_operation_api_v1_documents_bulk_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkOperationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulkOperationResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Processing Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessingErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/documents/filter-options": {
            "get": {
                "tags": [
                    "Documents Management"
                ],
                "summary": "Get Document Filter Options",
                "description": "Get available options for document filters including extensions, mime types, authors, categories, and topics",
                "operationId": "get_document_filter_options_api_v1_documents_filter_options_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response Get Document Filter Options Api V1 Documents Filter Options Get"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/documents/{document_id}/download": {
            "get": {
                "tags": [
                    "Documents Management"
                ],
                "summary": "Download/View Document",
                "description": "Download or view the original document file as a streaming response",
                "operationId": "download_document_api_v1_documents__document_id__download_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "document_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Document Id"
                        }
                    },
                    {
                        "name": "view",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "Display inline in browser instead of downloading",
                            "default": false,
                            "title": "View"
                        },
                        "description": "Display inline in browser instead of downloading"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document file stream",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/current": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get Current Organization",
                "description": "Get current organization/tenant details including settings, limits, and metadata",
                "operationId": "get_current_organization_api_v1_organizations_current_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/organizations/members": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "List Organization Members",
                "description": "List all members of the current organization with pagination and filtering",
                "operationId": "list_organization_members_api_v1_organizations_members_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Page number",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Items per page",
                            "default": 20,
                            "title": "Size"
                        },
                        "description": "Items per page"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Search by name or email",
                            "title": "Search"
                        },
                        "description": "Search by name or email"
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "^(admin|member|viewer)$"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by user role",
                            "title": "Role"
                        },
                        "description": "Filter by user role"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "^(active|invited|disabled)$"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by user status",
                            "title": "Status"
                        },
                        "description": "Filter by user status"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationMembersResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/search/instant": {
            "post": {
                "tags": [
                    "search"
                ],
                "summary": "Instant Text Search",
                "description": "Fast text-based search across document content, filenames, and metadata (< 500ms)",
                "operationId": "instant_search_api_v1_search_instant_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstantSearchRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstantSearchResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/search/full": {
            "post": {
                "tags": [
                    "search"
                ],
                "summary": "Full Hybrid Search",
                "description": "Advanced hybrid search combining semantic and text search with AI processing (< 1s)",
                "operationId": "full_search_api_v1_search_full_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FullSearchRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FullSearchResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/search/suggestions": {
            "get": {
                "tags": [
                    "search"
                ],
                "summary": "Get Search Suggestions",
                "description": "Get search suggestions for autocomplete based on indexed fields",
                "operationId": "search_suggestions_api_v1_search_suggestions_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100,
                            "title": "Query"
                        }
                    },
                    {
                        "name": "field",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/SuggestionField",
                            "description": "Field to search for suggestions",
                            "default": "topics"
                        },
                        "description": "Field to search for suggestions"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 20,
                            "minimum": 1,
                            "default": 5,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchSuggestionsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/chat": {
            "post": {
                "summary": "Chat with Documents",
                "description": "Conversational RAG interface with document citations and follow-up support",
                "operationId": "chat_endpoint_api_v1_chat_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatQuery"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Processing Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessingErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/chat/stream": {
            "post": {
                "summary": "Streaming Chat",
                "description": "Real-time streaming chat with documents using Server-Sent Events. Each chunk follows the StreamingChatChunk format with types: 'token', 'citations', 'done', or 'error'.",
                "operationId": "chat_stream_endpoint_api_v1_chat_stream_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatQuery"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Streaming chat response via Server-Sent Events",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "text/event-stream": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "data: {\"type\": \"token\", \"content\": \"Hello\", \"done\": false}\n\ndata: {\"type\": \"token\", \"content\": \" world\", \"done\": false}\n\ndata: {\"type\": \"citations\", \"citations\": [{\"index\": 1, \"content\": \"...\", \"metadata\": {...}}], \"done\": false}\n\ndata: {\"type\": \"done\", \"done\": true}\n\n"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Processing Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessingErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/chat/debug": {
            "post": {
                "summary": "Debug Chat Pipeline",
                "description": "Debug endpoint for RAG pipeline with detailed processing info (development only)",
                "operationId": "chat_debug_endpoint_api_v1_chat_debug_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatQuery"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response Chat Debug Endpoint Api V1 Chat Debug Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Processing Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessingErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/conversations/": {
            "post": {
                "tags": [
                    "conversations"
                ],
                "summary": "Create Conversation",
                "description": "Create a new conversation for the authenticated user.",
                "operationId": "create_conversation_api_v1_conversations__post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConversationCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Conversation"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Processing Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessingErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "conversations"
                ],
                "summary": "List Conversations",
                "description": "List all conversations for the authenticated user with pagination.",
                "operationId": "list_conversations_api_v1_conversations__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Page number",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Items per page",
                            "default": 20,
                            "title": "Page Size"
                        },
                        "description": "Items per page"
                    },
                    {
                        "name": "include_archived",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "Include archived conversations",
                            "default": false,
                            "title": "Include Archived"
                        },
                        "description": "Include archived conversations"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConversationListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Processing Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessingErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/conversations/{conversation_id}": {
            "get": {
                "tags": [
                    "conversations"
                ],
                "summary": "Get Conversation",
                "description": "Get a specific conversation with optional message history.",
                "operationId": "get_conversation_api_v1_conversations__conversation_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "conversation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Conversation Id"
                        }
                    },
                    {
                        "name": "include_messages",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "Include message history",
                            "default": true,
                            "title": "Include Messages"
                        },
                        "description": "Include message history"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConversationWithMessages"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Processing Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessingErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "conversations"
                ],
                "summary": "Update Conversation",
                "description": "Update conversation properties (title, archive status, etc.).",
                "operationId": "update_conversation_api_v1_conversations__conversation_id__patch",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "conversation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Conversation Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConversationUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Conversation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Processing Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessingErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "conversations"
                ],
                "summary": "Delete Conversation",
                "description": "Delete a conversation and all its messages.",
                "operationId": "delete_conversation_api_v1_conversations__conversation_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "conversation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Conversation Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/conversations/{conversation_id}/messages": {
            "get": {
                "tags": [
                    "conversations"
                ],
                "summary": "Get Conversation Messages",
                "description": "Get messages for a conversation with optional pagination.",
                "operationId": "get_conversation_messages_api_v1_conversations__conversation_id__messages_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "conversation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Conversation Id"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer",
                                    "maximum": 100,
                                    "minimum": 1
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Number of messages to return",
                            "title": "Limit"
                        },
                        "description": "Number of messages to return"
                    },
                    {
                        "name": "before_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Get messages before this message ID",
                            "title": "Before Id"
                        },
                        "description": "Get messages before this message ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Conversation Messages Api V1 Conversations  Conversation Id  Messages Get"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Processing Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessingErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/tenants": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "List Tenants",
                "description": "List all tenants (admin only)",
                "operationId": "list_tenants_api_v1_admin_tenants_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/src__api__v1__endpoints__admin__TenantResponse"
                                    },
                                    "type": "array",
                                    "title": "Response List Tenants Api V1 Admin Tenants Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Create Tenant",
                "description": "Create a new tenant organization (super admin only)",
                "operationId": "create_tenant_api_v1_admin_tenants_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TenantCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/src__api__v1__endpoints__admin__TenantResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/waitlist": {
            "post": {
                "tags": [
                    "Waitlist"
                ],
                "summary": "Submit to Waitlist",
                "description": "Submit user information to join the product waitlist",
                "operationId": "submit_to_waitlist_api_v1_waitlist_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WaitlistSubmissionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WaitlistSubmissionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/acl/documents/{document_id}/grant-user": {
            "post": {
                "tags": [
                    "ACL"
                ],
                "summary": "Grant Document Access to User",
                "description": "Grant a specific user access to a document (admin or document uploader only)",
                "operationId": "grant_document_to_user_api_v1_acl_documents__document_id__grant_user_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "document_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Document Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GrantRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GrantResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/acl/documents/{document_id}/revoke-user/{target_user_id}": {
            "delete": {
                "tags": [
                    "ACL"
                ],
                "summary": "Revoke Document Access from User",
                "description": "Remove a user's access to a document (admin or document uploader only)",
                "operationId": "revoke_document_from_user_api_v1_acl_documents__document_id__revoke_user__target_user_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "document_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Document Id"
                        }
                    },
                    {
                        "name": "target_user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Target User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GrantResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/acl/documents/{document_id}/grant-group": {
            "post": {
                "tags": [
                    "ACL"
                ],
                "summary": "Grant Document Access to Group",
                "description": "Grant a group access to a document (admin or document uploader only)",
                "operationId": "grant_document_to_group_api_v1_acl_documents__document_id__grant_group_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "document_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Document Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GrantGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GrantGroupResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/acl/documents/{document_id}/revoke-group/{group_id}": {
            "delete": {
                "tags": [
                    "ACL"
                ],
                "summary": "Revoke Document Access from Group",
                "description": "Remove a group's access to a document (admin or document uploader only)",
                "operationId": "revoke_document_from_group_api_v1_acl_documents__document_id__revoke_group__group_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "document_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Document Id"
                        }
                    },
                    {
                        "name": "group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Group Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GrantGroupResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/oauth/authorize/{connector_type}": {
            "get": {
                "tags": [
                    "oauth"
                ],
                "summary": "Start OAuth Flow",
                "description": "Start OAuth2 authorization flow for a connector, returns authorization URL",
                "operationId": "start_oauth_flow_api_v1_oauth_authorize__connector_type__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "connector_type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Connector Type"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/oauth/callback/{connector_type}": {
            "post": {
                "tags": [
                    "oauth"
                ],
                "summary": "Oauth Callback",
                "description": "Handle OAuth2 callback and exchange authorization code for tokens.\n\nThis endpoint is called by the OAuth provider after user authorization.",
                "operationId": "oauth_callback_api_v1_oauth_callback__connector_type__post",
                "parameters": [
                    {
                        "name": "connector_type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Connector Type"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Authorization code from OAuth provider",
                            "title": "Code"
                        },
                        "description": "Authorization code from OAuth provider"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "State parameter for CSRF protection",
                            "title": "State"
                        },
                        "description": "State parameter for CSRF protection"
                    },
                    {
                        "name": "error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Error from OAuth provider",
                            "title": "Error"
                        },
                        "description": "Error from OAuth provider"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/connectors/": {
            "get": {
                "tags": [
                    "connectors"
                ],
                "summary": "List Available Connectors",
                "description": "Get all available connector types with their configuration schemas and requirements",
                "operationId": "list_available_connectors_api_v1_connectors__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ConnectorTypeResponse"
                                    },
                                    "type": "array",
                                    "title": "Response List Available Connectors Api V1 Connectors  Get"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/connectors/test-connection": {
            "post": {
                "tags": [
                    "connectors"
                ],
                "summary": "Test Connector Connection",
                "description": "Test a connector configuration without saving it.\n\nThis endpoint allows users to validate their credentials and configuration\nbefore creating a permanent connection.",
                "operationId": "test_connector_connection_api_v1_connectors_test_connection_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectionTestRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConnectionTestResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/connectors/{connector_type}": {
            "get": {
                "tags": [
                    "connectors"
                ],
                "summary": "Get Connector Details",
                "description": "Get detailed information about a specific connector type.\n\nReturns authentication requirements, configuration schema,\nand other metadata for the specified connector.",
                "operationId": "get_connector_details_api_v1_connectors__connector_type__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "connector_type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Connector Type"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/connections/": {
            "post": {
                "tags": [
                    "connections"
                ],
                "summary": "Create Connection",
                "description": "Create a new authenticated connection to an external service with credential validation",
                "operationId": "create_connection_api_v1_connections__post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateConnectionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConnectionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "connections"
                ],
                "summary": "List Connections",
                "description": "List all connections for the current user and tenant with optional filtering",
                "operationId": "list_connections_api_v1_connections__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "connector_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Connector Type"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ConnectionResponse"
                                    },
                                    "title": "Response List Connections Api V1 Connections  Get"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/connections/{connection_id}": {
            "get": {
                "tags": [
                    "connections"
                ],
                "summary": "Get Connection",
                "description": "Get details for a specific connection",
                "operationId": "get_connection_api_v1_connections__connection_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Connection Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConnectionResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "connections"
                ],
                "summary": "Update Connection",
                "description": "Update an existing connection including credentials and configuration",
                "operationId": "update_connection_api_v1_connections__connection_id__put",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Connection Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateConnectionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConnectionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "connections"
                ],
                "summary": "Delete Connection",
                "description": "Delete a connection if no active syncs exist",
                "operationId": "delete_connection_api_v1_connections__connection_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Connection Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/src__api__v1__models__responses__MessageResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/connections/{connection_id}/pause": {
            "patch": {
                "tags": [
                    "connections"
                ],
                "summary": "Pause Connection",
                "description": "Temporarily pause all syncs for a connection while keeping schedules intact",
                "operationId": "pause_connection_api_v1_connections__connection_id__pause_patch",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Connection Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PauseConnectionResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/connections/{connection_id}/resume": {
            "patch": {
                "tags": [
                    "connections"
                ],
                "summary": "Resume Connection",
                "description": "Resume a paused connection and optionally trigger an immediate sync",
                "operationId": "resume_connection_api_v1_connections__connection_id__resume_patch",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Connection Id"
                        }
                    },
                    {
                        "name": "trigger_sync",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Trigger Sync"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResumeConnectionResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/syncs/": {
            "post": {
                "tags": [
                    "syncs"
                ],
                "summary": "Create Sync",
                "description": "Create a new sync pipeline.\n\nThis is the primary way to create data synchronization configurations in Phase 6.\nIt orchestrates the creation of:\n- Sync record (primary configuration)\n- DAG (pipeline definition)\n- Connection links\n- Source connection record (for backwards compatibility)",
                "operationId": "create_sync_api_v1_syncs__post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSyncRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyncResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "syncs"
                ],
                "summary": "List Syncs",
                "description": "List all sync pipelines for the current tenant.\n\nSupports filtering by status and schedule type.",
                "operationId": "list_syncs_api_v1_syncs__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by status",
                            "title": "Status"
                        },
                        "description": "Filter by status"
                    },
                    {
                        "name": "has_schedule",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by scheduled/manual",
                            "title": "Has Schedule"
                        },
                        "description": "Filter by scheduled/manual"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 50,
                            "title": "Limit"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0,
                            "title": "Offset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SyncResponse"
                                    },
                                    "title": "Response List Syncs Api V1 Syncs  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/syncs/{sync_id}": {
            "get": {
                "tags": [
                    "syncs"
                ],
                "summary": "Get Sync",
                "description": "Get detailed information about a specific sync pipeline.",
                "operationId": "get_sync_api_v1_syncs__sync_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "sync_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Sync Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyncResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "syncs"
                ],
                "summary": "Update Sync",
                "description": "Update a sync pipeline configuration.",
                "operationId": "update_sync_api_v1_syncs__sync_id__patch",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "sync_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Sync Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSyncRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyncResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "syncs"
                ],
                "summary": "Delete Sync",
                "description": "Delete a sync pipeline.\n\nThis performs a soft delete by setting status to 'deleted'.",
                "operationId": "delete_sync_api_v1_syncs__sync_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "sync_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Sync Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/syncs/{sync_id}/run": {
            "post": {
                "tags": [
                    "syncs"
                ],
                "summary": "Run Sync",
                "description": "Manually trigger a sync pipeline execution.\n\nCreates a new sync job and executes it in the background.",
                "operationId": "run_sync_api_v1_syncs__sync_id__run_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "sync_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Sync Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyncJobResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/syncs/{sync_id}/jobs": {
            "get": {
                "tags": [
                    "syncs"
                ],
                "summary": "List Sync Jobs",
                "description": "List sync job history for a specific sync pipeline.",
                "operationId": "list_sync_jobs_api_v1_syncs__sync_id__jobs_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "sync_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Sync Id"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by job status",
                            "title": "Status"
                        },
                        "description": "Filter by job status"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 20,
                            "title": "Limit"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0,
                            "title": "Offset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SyncJobResponse"
                                    },
                                    "title": "Response List Sync Jobs Api V1 Syncs  Sync Id  Jobs Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/syncs/{sync_id}/stats": {
            "get": {
                "tags": [
                    "syncs"
                ],
                "summary": "Get Sync Stats",
                "description": "Get execution statistics for a sync pipeline.",
                "operationId": "get_sync_stats_api_v1_syncs__sync_id__stats_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "sync_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Sync Id"
                        }
                    },
                    {
                        "name": "days",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Number of days to include in stats",
                            "default": 30,
                            "title": "Days"
                        },
                        "description": "Number of days to include in stats"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyncStatsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/monitoring/health": {
            "get": {
                "tags": [
                    "monitoring"
                ],
                "summary": "Get System Health",
                "description": "Get comprehensive health status of the connector platform including sync jobs and connectors",
                "operationId": "get_system_health_api_v1_monitoring_health_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SystemHealthResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/monitoring/sync-jobs": {
            "get": {
                "tags": [
                    "monitoring"
                ],
                "summary": "Get Sync Job Health",
                "description": "Get detailed health metrics for sync job operations",
                "operationId": "get_sync_job_health_api_v1_monitoring_sync_jobs_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyncJobHealthResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/monitoring/connectors": {
            "get": {
                "tags": [
                    "monitoring"
                ],
                "summary": "Get Connector Health",
                "description": "Get health status for all available connectors",
                "operationId": "get_connector_health_api_v1_monitoring_connectors_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ConnectorHealthResponse"
                                    },
                                    "type": "array",
                                    "title": "Response Get Connector Health Api V1 Monitoring Connectors Get"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/monitoring/credentials/expiring": {
            "get": {
                "tags": [
                    "monitoring"
                ],
                "summary": "Get Expiring Credentials",
                "description": "Get list of credentials that will expire within the specified number of days",
                "operationId": "get_expiring_credentials_api_v1_monitoring_credentials_expiring_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "days_ahead",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 7,
                            "title": "Days Ahead"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpiringCredentialsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/google-drive/browse/{connection_id}": {
            "get": {
                "tags": [
                    "google-drive"
                ],
                "summary": "Browse Google Drive",
                "description": "Browse Google Drive folders and files.\n\n- Use folder_id=None or folder_id='root' to browse My Drive root\n- Provide drive_id to browse a specific shared drive\n- Returns both folders and files (unless include_files=False)",
                "operationId": "browse_google_drive_api_v1_google_drive_browse__connection_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Connection Id"
                        }
                    },
                    {
                        "name": "folder_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Folder ID to browse, 'root' for My Drive root",
                            "title": "Folder Id"
                        },
                        "description": "Folder ID to browse, 'root' for My Drive root"
                    },
                    {
                        "name": "drive_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Shared drive ID if browsing shared drive",
                            "title": "Drive Id"
                        },
                        "description": "Shared drive ID if browsing shared drive"
                    },
                    {
                        "name": "page_token",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Pagination token",
                            "title": "Page Token"
                        },
                        "description": "Pagination token"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Number of items per page",
                            "default": 50,
                            "title": "Page Size"
                        },
                        "description": "Number of items per page"
                    },
                    {
                        "name": "include_files",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "Include files in response",
                            "default": true,
                            "title": "Include Files"
                        },
                        "description": "Include files in response"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoogleDriveBrowseResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/google-drive/search/{connection_id}": {
            "get": {
                "tags": [
                    "google-drive"
                ],
                "summary": "Search Google Drive",
                "description": "Search for files in Google Drive.\n\nSearch query supports:\n- Full text search: searches file names and content\n- Operators: 'and', 'or', 'not'\n- Example: \"report and not draft\"",
                "operationId": "search_google_drive_api_v1_google_drive_search__connection_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Connection Id"
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Search query",
                            "title": "Query"
                        },
                        "description": "Search query"
                    },
                    {
                        "name": "mime_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by MIME type",
                            "title": "Mime Type"
                        },
                        "description": "Filter by MIME type"
                    },
                    {
                        "name": "folder_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Search within specific folder",
                            "title": "Folder Id"
                        },
                        "description": "Search within specific folder"
                    },
                    {
                        "name": "drive_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Search within specific shared drive",
                            "title": "Drive Id"
                        },
                        "description": "Search within specific shared drive"
                    },
                    {
                        "name": "page_token",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Pagination token",
                            "title": "Page Token"
                        },
                        "description": "Pagination token"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Number of results per page",
                            "default": 50,
                            "title": "Page Size"
                        },
                        "description": "Number of results per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoogleDriveSearchResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/google-drive/folder-tree/{connection_id}": {
            "get": {
                "tags": [
                    "google-drive"
                ],
                "summary": "Get Folder Tree",
                "description": "Get hierarchical folder tree structure.\n\nReturns a tree structure of folders up to max_depth levels.\nUseful for folder selection UI components.",
                "operationId": "get_folder_tree_api_v1_google_drive_folder_tree__connection_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Connection Id"
                        }
                    },
                    {
                        "name": "max_depth",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 5,
                            "minimum": 1,
                            "description": "Maximum depth to traverse",
                            "default": 3,
                            "title": "Max Depth"
                        },
                        "description": "Maximum depth to traverse"
                    },
                    {
                        "name": "include_shared_drives",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "Include shared drives",
                            "default": true,
                            "title": "Include Shared Drives"
                        },
                        "description": "Include shared drives"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoogleDriveFolderTreeResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/google-drive/shared-drives/{connection_id}": {
            "get": {
                "tags": [
                    "google-drive"
                ],
                "summary": "List Shared Drives",
                "description": "List all accessible shared drives.\n\nReturns list of shared drives the user has access to.",
                "operationId": "list_shared_drives_api_v1_google_drive_shared_drives__connection_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Connection Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/google-drive/file/{connection_id}/{file_id}": {
            "get": {
                "tags": [
                    "google-drive"
                ],
                "summary": "Get File Metadata",
                "description": "Get detailed metadata for a specific file.\n\nReturns comprehensive file information including permissions.",
                "operationId": "get_file_metadata_api_v1_google_drive_file__connection_id___file_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Connection Id"
                        }
                    },
                    {
                        "name": "file_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "File Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AuthResponse": {
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/UserResponse"
                    },
                    "access_token": {
                        "type": "string",
                        "title": "Access Token"
                    },
                    "refresh_token": {
                        "type": "string",
                        "title": "Refresh Token"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Expires At"
                    },
                    "is_new_company": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is New Company",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "user",
                    "access_token",
                    "refresh_token",
                    "expires_at"
                ],
                "title": "AuthResponse"
            },
            "AuthenticationErrorResponse": {
                "properties": {
                    "error_code": {
                        "type": "string",
                        "title": "Error Code",
                        "description": "Error code",
                        "default": "AUTHENTICATION_ERROR"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message",
                        "description": "Authentication error message",
                        "default": "Authentication failed"
                    },
                    "details": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Details",
                        "description": "Authentication error details"
                    }
                },
                "type": "object",
                "title": "AuthenticationErrorResponse",
                "description": "Response model for authentication errors (401)."
            },
            "AuthorizationErrorResponse": {
                "properties": {
                    "error_code": {
                        "type": "string",
                        "title": "Error Code",
                        "description": "Error code",
                        "default": "AUTHORIZATION_ERROR"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message",
                        "description": "Authorization error message",
                        "default": "Access denied"
                    },
                    "details": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Details",
                        "description": "Authorization error details"
                    }
                },
                "type": "object",
                "title": "AuthorizationErrorResponse",
                "description": "Response model for authorization errors (403)."
            },
            "BatchUploadResponse": {
                "properties": {
                    "processed_files": {
                        "items": {
                            "$ref": "#/components/schemas/UploadResponse"
                        },
                        "type": "array",
                        "title": "Processed Files"
                    },
                    "failed_files": {
                        "items": {
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Failed Files"
                    },
                    "total_processed": {
                        "type": "integer",
                        "title": "Total Processed"
                    },
                    "total_failed": {
                        "type": "integer",
                        "title": "Total Failed"
                    },
                    "overall_status": {
                        "type": "string",
                        "title": "Overall Status"
                    }
                },
                "type": "object",
                "required": [
                    "processed_files",
                    "failed_files",
                    "total_processed",
                    "total_failed",
                    "overall_status"
                ],
                "title": "BatchUploadResponse"
            },
            "Body_batch_upload_endpoint_api_v1_upload_batch_post": {
                "properties": {
                    "files": {
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "type": "array",
                        "title": "Files",
                        "description": "List of document files to upload"
                    }
                },
                "type": "object",
                "required": [
                    "files"
                ],
                "title": "Body_batch_upload_endpoint_api_v1_upload_batch_post"
            },
            "Body_upload_avatar_api_v1_users_upload_avatar_post": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File",
                        "description": "Avatar image file"
                    }
                },
                "type": "object",
                "required": [
                    "file"
                ],
                "title": "Body_upload_avatar_api_v1_users_upload_avatar_post"
            },
            "Body_upload_file_endpoint_api_v1_upload_post": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File",
                        "description": "Document file to upload"
                    }
                },
                "type": "object",
                "required": [
                    "file"
                ],
                "title": "Body_upload_file_endpoint_api_v1_upload_post"
            },
            "BulkOperationRequest": {
                "properties": {
                    "document_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "maxItems": 100,
                        "minItems": 1,
                        "title": "Document Ids"
                    },
                    "operation": {
                        "type": "string",
                        "pattern": "^(delete|update_acl|reprocess)$",
                        "title": "Operation"
                    },
                    "params": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Params"
                    }
                },
                "type": "object",
                "required": [
                    "document_ids",
                    "operation"
                ],
                "title": "BulkOperationRequest",
                "description": "Request for bulk operations on documents"
            },
            "BulkOperationResponse": {
                "properties": {
                    "successful": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Successful"
                    },
                    "failed": {
                        "items": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Failed"
                    },
                    "total_processed": {
                        "type": "integer",
                        "title": "Total Processed"
                    },
                    "operation": {
                        "type": "string",
                        "title": "Operation"
                    }
                },
                "type": "object",
                "required": [
                    "successful",
                    "failed",
                    "total_processed",
                    "operation"
                ],
                "title": "BulkOperationResponse",
                "description": "Response for bulk operations"
            },
            "ChangeEmailRequest": {
                "properties": {
                    "new_email": {
                        "type": "string",
                        "format": "email",
                        "title": "New Email"
                    }
                },
                "type": "object",
                "required": [
                    "new_email"
                ],
                "title": "ChangeEmailRequest"
            },
            "ChangePasswordRequest": {
                "properties": {
                    "current_password": {
                        "type": "string",
                        "title": "Current Password"
                    },
                    "new_password": {
                        "type": "string",
                        "minLength": 8,
                        "title": "New Password"
                    }
                },
                "type": "object",
                "required": [
                    "current_password",
                    "new_password"
                ],
                "title": "ChangePasswordRequest"
            },
            "ChatMessage": {
                "properties": {
                    "role": {
                        "type": "string",
                        "title": "Role",
                        "description": "Message role (user or assistant)"
                    },
                    "content": {
                        "type": "string",
                        "title": "Content",
                        "description": "Message content"
                    }
                },
                "type": "object",
                "required": [
                    "role",
                    "content"
                ],
                "title": "ChatMessage"
            },
            "ChatQuery": {
                "properties": {
                    "query": {
                        "type": "string",
                        "title": "Query",
                        "description": "The user's question"
                    },
                    "conversation_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Conversation Id",
                        "description": "ID of existing conversation to continue (creates new if not provided)"
                    },
                    "conversation_history": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ChatMessage"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Conversation History",
                        "description": "Previous conversation messages (ignored if conversation_id is provided)"
                    },
                    "limit": {
                        "type": "integer",
                        "title": "Limit",
                        "description": "Maximum number of documents to retrieve",
                        "default": 10
                    },
                    "filters": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Filters",
                        "description": "Filters to apply to the search"
                    },
                    "skip_decomposition": {
                        "type": "boolean",
                        "title": "Skip Decomposition",
                        "description": "Whether to skip query decomposition",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "query"
                ],
                "title": "ChatQuery"
            },
            "ChatResponse": {
                "properties": {
                    "answer": {
                        "type": "string",
                        "title": "Answer",
                        "description": "Generated answer"
                    },
                    "conversation_id": {
                        "type": "string",
                        "title": "Conversation Id",
                        "description": "ID of the conversation"
                    },
                    "citations": {
                        "items": {
                            "$ref": "#/components/schemas/Citation"
                        },
                        "type": "array",
                        "title": "Citations",
                        "description": "Citations to source documents"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Status of the request"
                    },
                    "error": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error",
                        "description": "Error message if any"
                    }
                },
                "type": "object",
                "required": [
                    "answer",
                    "conversation_id",
                    "status"
                ],
                "title": "ChatResponse"
            },
            "CheckDomainRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    }
                },
                "type": "object",
                "required": [
                    "email"
                ],
                "title": "CheckDomainRequest"
            },
            "CheckDomainResponse": {
                "properties": {
                    "domain": {
                        "type": "string",
                        "title": "Domain"
                    },
                    "has_existing_tenant": {
                        "type": "boolean",
                        "title": "Has Existing Tenant"
                    },
                    "tenant_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tenant Name"
                    },
                    "requires_invite": {
                        "type": "boolean",
                        "title": "Requires Invite"
                    },
                    "is_generic_domain": {
                        "type": "boolean",
                        "title": "Is Generic Domain"
                    }
                },
                "type": "object",
                "required": [
                    "domain",
                    "has_existing_tenant",
                    "requires_invite",
                    "is_generic_domain"
                ],
                "title": "CheckDomainResponse"
            },
            "Citation": {
                "properties": {
                    "index": {
                        "type": "integer",
                        "title": "Index",
                        "description": "Citation index"
                    },
                    "content": {
                        "type": "string",
                        "title": "Content",
                        "description": "Cited content"
                    },
                    "metadata": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Metadata",
                        "description": "Citation metadata"
                    }
                },
                "type": "object",
                "required": [
                    "index",
                    "content",
                    "metadata"
                ],
                "title": "Citation"
            },
            "CompleteStepRequest": {
                "properties": {
                    "step": {
                        "type": "string",
                        "title": "Step"
                    },
                    "step_data": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Step Data"
                    }
                },
                "type": "object",
                "required": [
                    "step"
                ],
                "title": "CompleteStepRequest"
            },
            "CompleteStepResponse": {
                "properties": {
                    "step": {
                        "type": "string",
                        "title": "Step"
                    },
                    "completed": {
                        "type": "boolean",
                        "title": "Completed"
                    },
                    "next_step": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Next Step"
                    },
                    "progress": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Progress"
                    }
                },
                "type": "object",
                "required": [
                    "step",
                    "completed",
                    "progress"
                ],
                "title": "CompleteStepResponse"
            },
            "ConflictErrorResponse": {
                "properties": {
                    "error_code": {
                        "type": "string",
                        "title": "Error Code",
                        "description": "Error code",
                        "default": "CONFLICT_ERROR"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message",
                        "description": "Conflict error message",
                        "default": "Resource conflict"
                    },
                    "details": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Details",
                        "description": "Conflict error details"
                    }
                },
                "type": "object",
                "title": "ConflictErrorResponse",
                "description": "Response model for conflict errors (409)."
            },
            "ConnectionResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "connector_type": {
                        "type": "string",
                        "title": "Connector Type"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "last_sync_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Sync At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "connector_type",
                    "status",
                    "created_at",
                    "updated_at"
                ],
                "title": "ConnectionResponse",
                "description": "Response model for connection information"
            },
            "ConnectionTestRequest": {
                "properties": {
                    "connector_type": {
                        "type": "string",
                        "title": "Connector Type"
                    },
                    "credentials": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Credentials"
                    },
                    "config": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Config"
                    }
                },
                "type": "object",
                "required": [
                    "connector_type",
                    "credentials"
                ],
                "title": "ConnectionTestRequest",
                "description": "Request model for testing connector connections"
            },
            "ConnectionTestResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "title": "Success"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "details": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Details"
                    }
                },
                "type": "object",
                "required": [
                    "success",
                    "message"
                ],
                "title": "ConnectionTestResponse",
                "description": "Response model for connection test results"
            },
            "ConnectorHealthResponse": {
                "properties": {
                    "connector_type": {
                        "type": "string",
                        "title": "Connector Type"
                    },
                    "total_connections": {
                        "type": "integer",
                        "title": "Total Connections"
                    },
                    "active_connections": {
                        "type": "integer",
                        "title": "Active Connections"
                    },
                    "error_connections": {
                        "type": "integer",
                        "title": "Error Connections"
                    },
                    "last_connection_test": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Connection Test"
                    },
                    "credentials_expiring_soon": {
                        "type": "integer",
                        "title": "Credentials Expiring Soon"
                    },
                    "health_status": {
                        "type": "string",
                        "title": "Health Status"
                    }
                },
                "type": "object",
                "required": [
                    "connector_type",
                    "total_connections",
                    "active_connections",
                    "error_connections",
                    "last_connection_test",
                    "credentials_expiring_soon",
                    "health_status"
                ],
                "title": "ConnectorHealthResponse",
                "description": "Response model for connector health status"
            },
            "ConnectorTypeResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "short_name": {
                        "type": "string",
                        "title": "Short Name"
                    },
                    "auth_type": {
                        "type": "string",
                        "title": "Auth Type"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "labels": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Labels",
                        "default": []
                    },
                    "config_schema": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Config Schema"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "default": true
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "short_name",
                    "auth_type"
                ],
                "title": "ConnectorTypeResponse",
                "description": "Response model for connector type information"
            },
            "Conversation": {
                "properties": {
                    "title": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Title",
                        "description": "Conversation title (auto-generated from first message if not provided)"
                    },
                    "metadata": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Metadata",
                        "description": "Additional metadata"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id"
                    },
                    "tenant_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Tenant Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "is_archived": {
                        "type": "boolean",
                        "title": "Is Archived",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "user_id",
                    "tenant_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "Conversation",
                "description": "Complete conversation model."
            },
            "ConversationCreate": {
                "properties": {
                    "title": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Title",
                        "description": "Conversation title (auto-generated from first message if not provided)"
                    },
                    "metadata": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Metadata",
                        "description": "Additional metadata"
                    }
                },
                "type": "object",
                "title": "ConversationCreate",
                "description": "Model for creating a new conversation."
            },
            "ConversationListResponse": {
                "properties": {
                    "conversations": {
                        "items": {
                            "$ref": "#/components/schemas/Conversation"
                        },
                        "type": "array",
                        "title": "Conversations"
                    },
                    "total": {
                        "type": "integer",
                        "title": "Total"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page"
                    },
                    "page_size": {
                        "type": "integer",
                        "title": "Page Size"
                    }
                },
                "type": "object",
                "required": [
                    "conversations",
                    "total",
                    "page",
                    "page_size"
                ],
                "title": "ConversationListResponse",
                "description": "Response model for conversation list."
            },
            "ConversationUpdate": {
                "properties": {
                    "title": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Title"
                    },
                    "is_archived": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Archived"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata"
                    }
                },
                "type": "object",
                "title": "ConversationUpdate",
                "description": "Model for updating a conversation."
            },
            "ConversationWithMessages": {
                "properties": {
                    "title": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Title",
                        "description": "Conversation title (auto-generated from first message if not provided)"
                    },
                    "metadata": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Metadata",
                        "description": "Additional metadata"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id"
                    },
                    "tenant_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Tenant Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "is_archived": {
                        "type": "boolean",
                        "title": "Is Archived",
                        "default": false
                    },
                    "messages": {
                        "items": {
                            "$ref": "#/components/schemas/Message"
                        },
                        "type": "array",
                        "title": "Messages",
                        "default": []
                    },
                    "message_count": {
                        "type": "integer",
                        "title": "Message Count",
                        "default": 0
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "user_id",
                    "tenant_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "ConversationWithMessages",
                "description": "Conversation with messages included."
            },
            "CreateConnectionRequest": {
                "properties": {
                    "connector_type": {
                        "type": "string",
                        "title": "Connector Type"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "credentials": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Credentials"
                    },
                    "config": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Config"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    }
                },
                "type": "object",
                "required": [
                    "connector_type",
                    "name",
                    "credentials"
                ],
                "title": "CreateConnectionRequest",
                "description": "Request model for creating a new connection"
            },
            "CreateSyncRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name for the sync pipeline"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Description of what this sync does"
                    },
                    "source_connection_id": {
                        "type": "string",
                        "title": "Source Connection Id",
                        "description": "ID of the source connection"
                    },
                    "destination_connection_ids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Destination Connection Ids",
                        "description": "Optional destination connections"
                    },
                    "sync_schedule": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sync Schedule",
                        "description": "Cron expression for scheduling"
                    },
                    "filters": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Filters",
                        "description": "Filters to apply during sync"
                    },
                    "transformations": {
                        "anyOf": [
                            {
                                "items": {
                                    "additionalProperties": true,
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Transformations",
                        "description": "Transformation steps"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "source_connection_id"
                ],
                "title": "CreateSyncRequest",
                "description": "Request model for creating a new sync pipeline"
            },
            "DatabaseConnectionStatusResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "connection_statistics": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Connection Statistics"
                    },
                    "timestamp": {
                        "type": "string",
                        "title": "Timestamp"
                    },
                    "error": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error"
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "connection_statistics",
                    "timestamp"
                ],
                "title": "DatabaseConnectionStatusResponse",
                "description": "Response model for database connection status"
            },
            "DeleteAccountRequest": {
                "properties": {
                    "confirm_email": {
                        "type": "string",
                        "format": "email",
                        "title": "Confirm Email"
                    },
                    "reason": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 500
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Reason"
                    }
                },
                "type": "object",
                "required": [
                    "confirm_email"
                ],
                "title": "DeleteAccountRequest"
            },
            "DocumentDetailResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "source_type": {
                        "type": "string",
                        "title": "Source Type"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "file_size_bytes": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "File Size Bytes"
                    },
                    "extension": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Extension"
                    },
                    "mime_type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Mime Type"
                    },
                    "url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Url"
                    },
                    "processing_status": {
                        "type": "string",
                        "title": "Processing Status"
                    },
                    "uploaded_by": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Uploaded By"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata"
                    },
                    "parser_metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parser Metadata"
                    },
                    "error_details": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error Details"
                    },
                    "chunk_count": {
                        "type": "integer",
                        "title": "Chunk Count",
                        "default": 0
                    },
                    "processing_duration_seconds": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Processing Duration Seconds"
                    },
                    "source_connection": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Source Connection"
                    },
                    "acl_permissions": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Acl Permissions"
                    },
                    "content_hash": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Content Hash"
                    },
                    "view_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "View Url"
                    },
                    "download_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Download Url"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "source_type",
                    "status",
                    "created_at",
                    "updated_at",
                    "processing_status"
                ],
                "title": "DocumentDetailResponse",
                "description": "Detailed document information"
            },
            "DocumentListResponse": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/DocumentSummary"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "total": {
                        "type": "integer",
                        "title": "Total"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page"
                    },
                    "size": {
                        "type": "integer",
                        "title": "Size"
                    },
                    "has_more": {
                        "type": "boolean",
                        "title": "Has More"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "total",
                    "page",
                    "size",
                    "has_more"
                ],
                "title": "DocumentListResponse",
                "description": "Paginated document list response"
            },
            "DocumentSummary": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "source_type": {
                        "type": "string",
                        "title": "Source Type"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "file_size_bytes": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "File Size Bytes"
                    },
                    "extension": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Extension"
                    },
                    "processing_status": {
                        "type": "string",
                        "title": "Processing Status"
                    },
                    "uploaded_by": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Uploaded By"
                    },
                    "chunk_count": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunk Count",
                        "default": 0
                    },
                    "has_permission": {
                        "type": "boolean",
                        "title": "Has Permission",
                        "default": true
                    },
                    "view_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "View Url"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "source_type",
                    "status",
                    "created_at",
                    "updated_at",
                    "processing_status"
                ],
                "title": "DocumentSummary",
                "description": "Summary of a document for list views"
            },
            "ExpiringCredentialsResponse": {
                "properties": {
                    "expiring_count": {
                        "type": "integer",
                        "title": "Expiring Count"
                    },
                    "days_ahead": {
                        "type": "integer",
                        "title": "Days Ahead"
                    },
                    "credentials": {
                        "items": {
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Credentials"
                    }
                },
                "type": "object",
                "required": [
                    "expiring_count",
                    "days_ahead",
                    "credentials"
                ],
                "title": "ExpiringCredentialsResponse",
                "description": "Response model for expiring credentials check"
            },
            "ForgotPasswordRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    }
                },
                "type": "object",
                "required": [
                    "email"
                ],
                "title": "ForgotPasswordRequest"
            },
            "FullSearchRequest": {
                "properties": {
                    "query": {
                        "type": "string",
                        "maxLength": 500,
                        "minLength": 1,
                        "title": "Query"
                    },
                    "limit": {
                        "type": "integer",
                        "maximum": 100.0,
                        "minimum": 1.0,
                        "title": "Limit",
                        "default": 20
                    },
                    "include_summary": {
                        "type": "boolean",
                        "title": "Include Summary",
                        "default": true
                    },
                    "filters": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Filters"
                    },
                    "relevance_threshold": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 1.0,
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Relevance Threshold",
                        "description": "Minimum combined score threshold (0.0-1.0)",
                        "default": 0.1
                    }
                },
                "type": "object",
                "required": [
                    "query"
                ],
                "title": "FullSearchRequest"
            },
            "FullSearchResponse": {
                "properties": {
                    "results": {
                        "items": {
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Results"
                    },
                    "total_results": {
                        "type": "integer",
                        "title": "Total Results"
                    },
                    "query_time_ms": {
                        "type": "number",
                        "title": "Query Time Ms"
                    },
                    "search_type": {
                        "type": "string",
                        "title": "Search Type",
                        "default": "hybrid"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "total_results",
                    "query_time_ms"
                ],
                "title": "FullSearchResponse"
            },
            "GoogleDriveBrowseResponse": {
                "properties": {
                    "folders": {
                        "items": {
                            "$ref": "#/components/schemas/GoogleDriveFolder"
                        },
                        "type": "array",
                        "title": "Folders"
                    },
                    "files": {
                        "items": {
                            "$ref": "#/components/schemas/GoogleDriveFile"
                        },
                        "type": "array",
                        "title": "Files"
                    },
                    "next_page_token": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Next Page Token"
                    },
                    "parent_folder": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/GoogleDriveFolder"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "folders",
                    "files"
                ],
                "title": "GoogleDriveBrowseResponse",
                "description": "Response for browsing folders and files"
            },
            "GoogleDriveFile": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "mime_type": {
                        "type": "string",
                        "title": "Mime Type"
                    },
                    "size_bytes": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Size Bytes"
                    },
                    "parent_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parent Id"
                    },
                    "created_time": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created Time"
                    },
                    "modified_time": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified Time"
                    },
                    "web_view_link": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Web View Link"
                    },
                    "starred": {
                        "type": "boolean",
                        "title": "Starred",
                        "default": false
                    },
                    "drive_type": {
                        "type": "string",
                        "title": "Drive Type",
                        "description": "my_drive or shared_drive",
                        "default": "my_drive"
                    },
                    "drive_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Drive Id"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "mime_type"
                ],
                "title": "GoogleDriveFile",
                "description": "File information for the frontend"
            },
            "GoogleDriveFolder": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "mime_type": {
                        "type": "string",
                        "title": "Mime Type",
                        "default": "application/vnd.google-apps.folder"
                    },
                    "parent_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parent Id"
                    },
                    "created_time": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created Time"
                    },
                    "modified_time": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified Time"
                    },
                    "has_children": {
                        "type": "boolean",
                        "title": "Has Children",
                        "default": false
                    },
                    "drive_type": {
                        "type": "string",
                        "title": "Drive Type",
                        "description": "my_drive or shared_drive",
                        "default": "my_drive"
                    },
                    "drive_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Drive Id"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "title": "GoogleDriveFolder",
                "description": "Folder information for the frontend"
            },
            "GoogleDriveFolderTreeNode": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "children": {
                        "items": {
                            "$ref": "#/components/schemas/GoogleDriveFolderTreeNode"
                        },
                        "type": "array",
                        "title": "Children",
                        "default": []
                    },
                    "drive_type": {
                        "type": "string",
                        "title": "Drive Type",
                        "default": "my_drive"
                    },
                    "drive_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Drive Id"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "title": "GoogleDriveFolderTreeNode",
                "description": "Node in folder tree structure"
            },
            "GoogleDriveFolderTreeResponse": {
                "properties": {
                    "my_drive": {
                        "$ref": "#/components/schemas/GoogleDriveFolderTreeNode"
                    },
                    "shared_drives": {
                        "items": {
                            "$ref": "#/components/schemas/GoogleDriveFolderTreeNode"
                        },
                        "type": "array",
                        "title": "Shared Drives",
                        "default": []
                    }
                },
                "type": "object",
                "required": [
                    "my_drive"
                ],
                "title": "GoogleDriveFolderTreeResponse",
                "description": "Response for folder tree"
            },
            "GoogleDriveSearchResponse": {
                "properties": {
                    "files": {
                        "items": {
                            "$ref": "#/components/schemas/GoogleDriveFile"
                        },
                        "type": "array",
                        "title": "Files"
                    },
                    "next_page_token": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Next Page Token"
                    },
                    "total_results": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Total Results"
                    }
                },
                "type": "object",
                "required": [
                    "files"
                ],
                "title": "GoogleDriveSearchResponse",
                "description": "Response for search results"
            },
            "GrantGroupRequest": {
                "properties": {
                    "group_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Group Id"
                    }
                },
                "type": "object",
                "required": [
                    "group_id"
                ],
                "title": "GrantGroupRequest"
            },
            "GrantGroupResponse": {
                "properties": {
                    "document_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Document Id"
                    },
                    "group_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Group Id"
                    },
                    "did_insert": {
                        "type": "boolean",
                        "title": "Did Insert"
                    },
                    "status": {
                        "type": "string",
                        "const": "success",
                        "title": "Status",
                        "default": "success"
                    }
                },
                "type": "object",
                "required": [
                    "document_id",
                    "group_id",
                    "did_insert"
                ],
                "title": "GrantGroupResponse"
            },
            "GrantRequest": {
                "properties": {
                    "user_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "User Id"
                    }
                },
                "type": "object",
                "required": [
                    "user_id"
                ],
                "title": "GrantRequest"
            },
            "GrantResponse": {
                "properties": {
                    "document_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Document Id"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "User Id"
                    },
                    "did_insert": {
                        "type": "boolean",
                        "title": "Did Insert"
                    },
                    "status": {
                        "type": "string",
                        "const": "success",
                        "title": "Status",
                        "default": "success"
                    }
                },
                "type": "object",
                "required": [
                    "document_id",
                    "user_id",
                    "did_insert"
                ],
                "title": "GrantResponse"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "HealthCheckResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "version": {
                        "type": "string",
                        "title": "Version"
                    },
                    "components": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Components"
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "version",
                    "components"
                ],
                "title": "HealthCheckResponse",
                "description": "Response model for health check"
            },
            "InstantSearchRequest": {
                "properties": {
                    "query": {
                        "type": "string",
                        "maxLength": 500,
                        "minLength": 1,
                        "title": "Query"
                    },
                    "limit": {
                        "type": "integer",
                        "maximum": 50.0,
                        "minimum": 1.0,
                        "title": "Limit",
                        "default": 10
                    },
                    "filters": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Filters"
                    }
                },
                "type": "object",
                "required": [
                    "query"
                ],
                "title": "InstantSearchRequest"
            },
            "InstantSearchResponse": {
                "properties": {
                    "results": {
                        "items": {
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Results"
                    },
                    "total_results": {
                        "type": "integer",
                        "title": "Total Results"
                    },
                    "query_time_ms": {
                        "type": "number",
                        "title": "Query Time Ms"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "total_results",
                    "query_time_ms"
                ],
                "title": "InstantSearchResponse"
            },
            "InternalServerErrorResponse": {
                "properties": {
                    "error_code": {
                        "type": "string",
                        "title": "Error Code",
                        "description": "Error code",
                        "default": "INTERNAL_SERVER_ERROR"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message",
                        "description": "Internal error message",
                        "default": "Internal server error"
                    },
                    "details": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Details",
                        "description": "Internal error details"
                    }
                },
                "type": "object",
                "title": "InternalServerErrorResponse",
                "description": "Response model for internal server errors (500)."
            },
            "InviteResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "role": {
                        "type": "string",
                        "title": "Role"
                    },
                    "invited_by": {
                        "type": "string",
                        "title": "Invited By"
                    },
                    "inviter_name": {
                        "type": "string",
                        "title": "Inviter Name"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Expires At"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "accepted_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Accepted At"
                    },
                    "is_expired": {
                        "type": "boolean",
                        "title": "Is Expired"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "email",
                    "role",
                    "invited_by",
                    "inviter_name",
                    "expires_at",
                    "created_at",
                    "is_expired"
                ],
                "title": "InviteResponse"
            },
            "Message": {
                "properties": {
                    "role": {
                        "$ref": "#/components/schemas/MessageRole"
                    },
                    "content": {
                        "type": "string",
                        "title": "Content"
                    },
                    "metadata": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Metadata",
                        "description": "Additional metadata (citations, model used, etc.)"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "conversation_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Conversation Id"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id"
                    },
                    "tenant_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Tenant Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "role",
                    "content",
                    "id",
                    "conversation_id",
                    "user_id",
                    "tenant_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "Message",
                "description": "Complete message model."
            },
            "MessageRole": {
                "type": "string",
                "enum": [
                    "user",
                    "assistant",
                    "system"
                ],
                "title": "MessageRole",
                "description": "Message role types."
            },
            "NotFoundErrorResponse": {
                "properties": {
                    "error_code": {
                        "type": "string",
                        "title": "Error Code",
                        "description": "Error code",
                        "default": "NOT_FOUND_ERROR"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message",
                        "description": "Not found error message"
                    },
                    "details": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Details",
                        "description": "Not found error details"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "NotFoundErrorResponse",
                "description": "Response model for not found errors (404)."
            },
            "OnboardingStatusResponse": {
                "properties": {
                    "steps": {
                        "items": {
                            "$ref": "#/components/schemas/OnboardingStepResponse"
                        },
                        "type": "array",
                        "title": "Steps"
                    },
                    "progress": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Progress"
                    },
                    "recommendations": {
                        "items": {
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Recommendations"
                    },
                    "show_banner": {
                        "type": "boolean",
                        "title": "Show Banner"
                    },
                    "tenant_created_days_ago": {
                        "type": "integer",
                        "title": "Tenant Created Days Ago"
                    }
                },
                "type": "object",
                "required": [
                    "steps",
                    "progress",
                    "recommendations",
                    "show_banner",
                    "tenant_created_days_ago"
                ],
                "title": "OnboardingStatusResponse"
            },
            "OnboardingStepResponse": {
                "properties": {
                    "step": {
                        "type": "string",
                        "title": "Step"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "required": {
                        "type": "boolean",
                        "title": "Required"
                    },
                    "order": {
                        "type": "integer",
                        "title": "Order"
                    },
                    "estimated_time_minutes": {
                        "type": "integer",
                        "title": "Estimated Time Minutes"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "completed_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Completed At"
                    },
                    "step_data": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Step Data"
                    }
                },
                "type": "object",
                "required": [
                    "step",
                    "title",
                    "description",
                    "required",
                    "order",
                    "estimated_time_minutes",
                    "status"
                ],
                "title": "OnboardingStepResponse"
            },
            "OrganizationMember": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "role": {
                        "type": "string",
                        "title": "Role"
                    },
                    "joined_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Joined At"
                    },
                    "last_active": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Active"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "default": "active"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "email",
                    "role",
                    "joined_at"
                ],
                "title": "OrganizationMember",
                "description": "Organization member details"
            },
            "OrganizationMembersResponse": {
                "properties": {
                    "members": {
                        "items": {
                            "$ref": "#/components/schemas/OrganizationMember"
                        },
                        "type": "array",
                        "title": "Members"
                    },
                    "total": {
                        "type": "integer",
                        "title": "Total"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page"
                    },
                    "size": {
                        "type": "integer",
                        "title": "Size"
                    },
                    "has_more": {
                        "type": "boolean",
                        "title": "Has More"
                    }
                },
                "type": "object",
                "required": [
                    "members",
                    "total",
                    "page",
                    "size",
                    "has_more"
                ],
                "title": "OrganizationMembersResponse",
                "description": "Organization members list response"
            },
            "OrganizationResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "owner_id": {
                        "type": "string",
                        "title": "Owner Id"
                    },
                    "settings": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Settings"
                    },
                    "usage": {
                        "$ref": "#/components/schemas/OrganizationUsage"
                    },
                    "subscription": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/SubscriptionInfo"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "owner_id",
                    "usage"
                ],
                "title": "OrganizationResponse",
                "description": "Organization details response"
            },
            "OrganizationUsage": {
                "properties": {
                    "document_count": {
                        "type": "integer",
                        "title": "Document Count"
                    },
                    "total_storage_bytes": {
                        "type": "integer",
                        "title": "Total Storage Bytes"
                    },
                    "active_users": {
                        "type": "integer",
                        "title": "Active Users"
                    },
                    "connections_count": {
                        "type": "integer",
                        "title": "Connections Count"
                    },
                    "last_sync_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Sync At"
                    }
                },
                "type": "object",
                "required": [
                    "document_count",
                    "total_storage_bytes",
                    "active_users",
                    "connections_count"
                ],
                "title": "OrganizationUsage",
                "description": "Organization usage statistics"
            },
            "PauseConnectionResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "cancelled_sync_jobs": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cancelled Sync Jobs"
                    }
                },
                "type": "object",
                "required": [
                    "message",
                    "status"
                ],
                "title": "PauseConnectionResponse",
                "description": "Response model for pausing a connection"
            },
            "PendingInviteResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "role": {
                        "type": "string",
                        "title": "Role"
                    },
                    "invited_by": {
                        "type": "string",
                        "title": "Invited By"
                    },
                    "inviter_name": {
                        "type": "string",
                        "title": "Inviter Name"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Expires At"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "email",
                    "role",
                    "invited_by",
                    "inviter_name",
                    "expires_at",
                    "created_at"
                ],
                "title": "PendingInviteResponse"
            },
            "ProcessingErrorResponse": {
                "properties": {
                    "error_code": {
                        "type": "string",
                        "title": "Error Code",
                        "description": "Error code",
                        "default": "PROCESSING_ERROR"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message",
                        "description": "Processing error message",
                        "default": "Processing failed"
                    },
                    "details": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Details",
                        "description": "Processing error details"
                    }
                },
                "type": "object",
                "title": "ProcessingErrorResponse",
                "description": "Response model for processing errors (422)."
            },
            "RateLimitErrorResponse": {
                "properties": {
                    "error_code": {
                        "type": "string",
                        "title": "Error Code",
                        "description": "Error code",
                        "default": "RATE_LIMIT_EXCEEDED"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message",
                        "description": "Rate limit error message"
                    },
                    "details": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Details",
                        "description": "Rate limit details including limit and retry_after_seconds"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "RateLimitErrorResponse",
                "description": "Response model for rate limit errors (429)."
            },
            "RefreshTokenRequest": {
                "properties": {
                    "refresh_token": {
                        "type": "string",
                        "title": "Refresh Token"
                    }
                },
                "type": "object",
                "required": [
                    "refresh_token"
                ],
                "title": "RefreshTokenRequest"
            },
            "RefreshTokenResponse": {
                "properties": {
                    "access_token": {
                        "type": "string",
                        "title": "Access Token"
                    },
                    "refresh_token": {
                        "type": "string",
                        "title": "Refresh Token"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Expires At"
                    }
                },
                "type": "object",
                "required": [
                    "access_token",
                    "refresh_token",
                    "expires_at"
                ],
                "title": "RefreshTokenResponse"
            },
            "ResetPasswordRequest": {
                "properties": {
                    "token": {
                        "type": "string",
                        "title": "Token"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8,
                        "title": "Password"
                    }
                },
                "type": "object",
                "required": [
                    "token",
                    "password"
                ],
                "title": "ResetPasswordRequest"
            },
            "ResumeConnectionResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "active_syncs": {
                        "type": "integer",
                        "title": "Active Syncs"
                    },
                    "sync_job_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sync Job Id"
                    }
                },
                "type": "object",
                "required": [
                    "message",
                    "status",
                    "active_syncs"
                ],
                "title": "ResumeConnectionResponse",
                "description": "Response model for resuming a connection"
            },
            "SearchSuggestionsResponse": {
                "properties": {
                    "suggestions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Suggestions"
                    }
                },
                "type": "object",
                "required": [
                    "suggestions"
                ],
                "title": "SearchSuggestionsResponse"
            },
            "SendInviteRequest": {
                "properties": {
                    "emails": {
                        "items": {
                            "type": "string",
                            "format": "email"
                        },
                        "type": "array",
                        "maxItems": 10,
                        "minItems": 1,
                        "title": "Emails"
                    },
                    "role": {
                        "type": "string",
                        "title": "Role",
                        "description": "Role for invited users",
                        "default": "member"
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 500
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message",
                        "description": "Optional invite message"
                    }
                },
                "type": "object",
                "required": [
                    "emails"
                ],
                "title": "SendInviteRequest"
            },
            "SendInviteResponse": {
                "properties": {
                    "invited": {
                        "type": "integer",
                        "title": "Invited"
                    },
                    "failed": {
                        "items": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Failed"
                    },
                    "invites": {
                        "items": {
                            "$ref": "#/components/schemas/InviteResponse"
                        },
                        "type": "array",
                        "title": "Invites"
                    }
                },
                "type": "object",
                "required": [
                    "invited",
                    "failed",
                    "invites"
                ],
                "title": "SendInviteResponse"
            },
            "SubscriptionInfo": {
                "properties": {
                    "plan_name": {
                        "type": "string",
                        "title": "Plan Name",
                        "default": "free"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "default": "active"
                    },
                    "expires_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Expires At"
                    },
                    "limits": {
                        "additionalProperties": {
                            "type": "integer"
                        },
                        "type": "object",
                        "title": "Limits"
                    }
                },
                "type": "object",
                "title": "SubscriptionInfo",
                "description": "Subscription information"
            },
            "SuggestionField": {
                "type": "string",
                "enum": [
                    "topics",
                    "categories",
                    "document_type"
                ],
                "title": "SuggestionField"
            },
            "SyncJobHealthResponse": {
                "properties": {
                    "total_jobs": {
                        "type": "integer",
                        "title": "Total Jobs"
                    },
                    "successful_jobs": {
                        "type": "integer",
                        "title": "Successful Jobs"
                    },
                    "failed_jobs": {
                        "type": "integer",
                        "title": "Failed Jobs"
                    },
                    "running_jobs": {
                        "type": "integer",
                        "title": "Running Jobs"
                    },
                    "success_rate": {
                        "type": "number",
                        "title": "Success Rate"
                    },
                    "last_24h_jobs": {
                        "type": "integer",
                        "title": "Last 24H Jobs"
                    },
                    "average_duration_minutes": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Average Duration Minutes"
                    },
                    "last_successful_sync": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Successful Sync"
                    },
                    "last_failed_sync": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Failed Sync"
                    }
                },
                "type": "object",
                "required": [
                    "total_jobs",
                    "successful_jobs",
                    "failed_jobs",
                    "running_jobs",
                    "success_rate",
                    "last_24h_jobs",
                    "average_duration_minutes",
                    "last_successful_sync",
                    "last_failed_sync"
                ],
                "title": "SyncJobHealthResponse",
                "description": "Response model for sync job health status"
            },
            "SyncJobResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "sync_id": {
                        "type": "string",
                        "title": "Sync Id"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "started_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Started At"
                    },
                    "completed_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Completed At"
                    },
                    "documents_processed": {
                        "type": "integer",
                        "title": "Documents Processed"
                    },
                    "documents_added": {
                        "type": "integer",
                        "title": "Documents Added"
                    },
                    "documents_updated": {
                        "type": "integer",
                        "title": "Documents Updated"
                    },
                    "documents_failed": {
                        "type": "integer",
                        "title": "Documents Failed"
                    },
                    "error_message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error Message"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "sync_id",
                    "status",
                    "started_at",
                    "completed_at",
                    "documents_processed",
                    "documents_added",
                    "documents_updated",
                    "documents_failed",
                    "error_message",
                    "metadata"
                ],
                "title": "SyncJobResponse",
                "description": "Response model for sync job execution"
            },
            "SyncResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "tenant_id": {
                        "type": "string",
                        "title": "Tenant Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "sync_schedule": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sync Schedule"
                    },
                    "next_scheduled_run": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Next Scheduled Run"
                    },
                    "last_run_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Run At"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "dag_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dag Id"
                    },
                    "source_connection": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Source Connection"
                    },
                    "destination_connections": {
                        "items": {
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Destination Connections"
                    },
                    "latest_job": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Latest Job"
                    },
                    "stats": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Stats"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "tenant_id",
                    "name",
                    "description",
                    "status",
                    "sync_schedule",
                    "next_scheduled_run",
                    "last_run_at",
                    "created_at",
                    "updated_at",
                    "dag_id",
                    "source_connection",
                    "destination_connections",
                    "latest_job",
                    "stats"
                ],
                "title": "SyncResponse",
                "description": "Response model for sync pipeline information"
            },
            "SyncStatsResponse": {
                "properties": {
                    "sync_id": {
                        "type": "string",
                        "title": "Sync Id"
                    },
                    "total_jobs": {
                        "type": "integer",
                        "title": "Total Jobs"
                    },
                    "successful_jobs": {
                        "type": "integer",
                        "title": "Successful Jobs"
                    },
                    "failed_jobs": {
                        "type": "integer",
                        "title": "Failed Jobs"
                    },
                    "success_rate": {
                        "type": "number",
                        "title": "Success Rate"
                    },
                    "total_documents_processed": {
                        "type": "integer",
                        "title": "Total Documents Processed"
                    },
                    "total_documents_added": {
                        "type": "integer",
                        "title": "Total Documents Added"
                    },
                    "total_documents_updated": {
                        "type": "integer",
                        "title": "Total Documents Updated"
                    },
                    "total_documents_failed": {
                        "type": "integer",
                        "title": "Total Documents Failed"
                    },
                    "average_duration_seconds": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Average Duration Seconds"
                    },
                    "last_job_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Job At"
                    }
                },
                "type": "object",
                "required": [
                    "sync_id",
                    "total_jobs",
                    "successful_jobs",
                    "failed_jobs",
                    "success_rate",
                    "total_documents_processed",
                    "total_documents_added",
                    "total_documents_updated",
                    "total_documents_failed",
                    "average_duration_seconds",
                    "last_job_at"
                ],
                "title": "SyncStatsResponse",
                "description": "Response model for sync statistics"
            },
            "SystemHealthResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "connectors": {
                        "items": {
                            "$ref": "#/components/schemas/ConnectorHealthResponse"
                        },
                        "type": "array",
                        "title": "Connectors"
                    },
                    "sync_jobs": {
                        "$ref": "#/components/schemas/SyncJobHealthResponse"
                    },
                    "credential_encryption": {
                        "type": "boolean",
                        "title": "Credential Encryption"
                    },
                    "oauth_configuration": {
                        "type": "boolean",
                        "title": "Oauth Configuration"
                    },
                    "last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Last Updated"
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "connectors",
                    "sync_jobs",
                    "credential_encryption",
                    "oauth_configuration",
                    "last_updated"
                ],
                "title": "SystemHealthResponse",
                "description": "Response model for overall system health"
            },
            "TaskStatusResponse": {
                "properties": {
                    "task_id": {
                        "type": "string",
                        "title": "Task Id",
                        "description": "Unique task identifier"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Task status (PENDING, SUCCESS, FAILURE, etc.)"
                    },
                    "result": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Result",
                        "description": "Task result data"
                    },
                    "error": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error",
                        "description": "Error message if task failed"
                    },
                    "progress": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Progress",
                        "description": "Task progress information"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created At",
                        "description": "Task creation timestamp"
                    },
                    "completed_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Completed At",
                        "description": "Task completion timestamp"
                    }
                },
                "type": "object",
                "required": [
                    "task_id",
                    "status"
                ],
                "title": "TaskStatusResponse",
                "description": "Background task status response."
            },
            "TeamMemberResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "first_name": {
                        "type": "string",
                        "title": "First Name"
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Last Name"
                    },
                    "role": {
                        "type": "string",
                        "title": "Role"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "last_active": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Active"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "email",
                    "first_name",
                    "last_name",
                    "role",
                    "is_active",
                    "created_at"
                ],
                "title": "TeamMemberResponse"
            },
            "TeamResponse": {
                "properties": {
                    "members": {
                        "items": {
                            "$ref": "#/components/schemas/TeamMemberResponse"
                        },
                        "type": "array",
                        "title": "Members"
                    },
                    "pending_invites": {
                        "items": {
                            "$ref": "#/components/schemas/PendingInviteResponse"
                        },
                        "type": "array",
                        "title": "Pending Invites"
                    },
                    "total_members": {
                        "type": "integer",
                        "title": "Total Members"
                    },
                    "total_pending": {
                        "type": "integer",
                        "title": "Total Pending"
                    },
                    "tenant_info": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Tenant Info"
                    }
                },
                "type": "object",
                "required": [
                    "members",
                    "pending_invites",
                    "total_members",
                    "total_pending",
                    "tenant_info"
                ],
                "title": "TeamResponse"
            },
            "TeamStatsResponse": {
                "properties": {
                    "total_members": {
                        "type": "integer",
                        "title": "Total Members"
                    },
                    "owners": {
                        "type": "integer",
                        "title": "Owners"
                    },
                    "admins": {
                        "type": "integer",
                        "title": "Admins"
                    },
                    "members": {
                        "type": "integer",
                        "title": "Members"
                    },
                    "pending_invites": {
                        "type": "integer",
                        "title": "Pending Invites"
                    }
                },
                "type": "object",
                "required": [
                    "total_members",
                    "owners",
                    "admins",
                    "members",
                    "pending_invites"
                ],
                "title": "TeamStatsResponse"
            },
            "TenantCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "api_key": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Key"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "TenantCreate"
            },
            "UpdateConnectionRequest": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "credentials": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Credentials"
                    },
                    "config": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Config"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    }
                },
                "type": "object",
                "title": "UpdateConnectionRequest",
                "description": "Request model for updating an existing connection"
            },
            "UpdateMemberRoleRequest": {
                "properties": {
                    "role": {
                        "type": "string",
                        "title": "Role",
                        "description": "New role for the team member"
                    }
                },
                "type": "object",
                "required": [
                    "role"
                ],
                "title": "UpdateMemberRoleRequest"
            },
            "UpdateProfileRequest": {
                "properties": {
                    "first_name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 50,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "First Name"
                    },
                    "last_name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 50,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Name"
                    }
                },
                "type": "object",
                "title": "UpdateProfileRequest"
            },
            "UpdateSyncRequest": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "sync_schedule": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sync Schedule"
                    },
                    "filters": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Filters"
                    },
                    "status": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "^(active|paused|deleted)$"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Status"
                    }
                },
                "type": "object",
                "title": "UpdateSyncRequest",
                "description": "Request model for updating a sync pipeline"
            },
            "UploadResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "source_id": {
                        "type": "string",
                        "title": "Source Id"
                    },
                    "virtual_record_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Virtual Record Id"
                    },
                    "filename": {
                        "type": "string",
                        "title": "Filename"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "file_size": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "File Size"
                    },
                    "file_type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "File Type"
                    },
                    "task_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Task Id"
                    }
                },
                "type": "object",
                "required": [
                    "message",
                    "source_id",
                    "filename",
                    "status"
                ],
                "title": "UploadResponse"
            },
            "UserLoginRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "title": "UserLoginRequest"
            },
            "UserProfileResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "first_name": {
                        "type": "string",
                        "title": "First Name"
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Last Name"
                    },
                    "role": {
                        "type": "string",
                        "title": "Role"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "avatar_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Avatar Url"
                    },
                    "tenant": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Tenant"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "email",
                    "first_name",
                    "last_name",
                    "role",
                    "is_active",
                    "created_at",
                    "updated_at",
                    "tenant"
                ],
                "title": "UserProfileResponse"
            },
            "UserResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "first_name": {
                        "type": "string",
                        "title": "First Name"
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Last Name"
                    },
                    "tenant_id": {
                        "type": "string",
                        "title": "Tenant Id"
                    },
                    "role": {
                        "type": "string",
                        "title": "Role"
                    },
                    "tenant": {
                        "$ref": "#/components/schemas/src__api__v1__endpoints__auth__TenantResponse"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "email",
                    "first_name",
                    "last_name",
                    "tenant_id",
                    "role",
                    "tenant"
                ],
                "title": "UserResponse"
            },
            "UserSignupRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8,
                        "title": "Password"
                    },
                    "first_name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "First Name"
                    },
                    "last_name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Last Name"
                    },
                    "company_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Company Name",
                        "description": "Company name for new tenant creation"
                    },
                    "company_size": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Company Size",
                        "description": "Company size (1-10, 11-50, etc.)"
                    },
                    "industry": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Industry",
                        "description": "Company industry"
                    },
                    "invite_token": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Invite Token",
                        "description": "Invite token for joining existing tenant"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "password",
                    "first_name",
                    "last_name"
                ],
                "title": "UserSignupRequest"
            },
            "ValidateInviteResponse": {
                "properties": {
                    "valid": {
                        "type": "boolean",
                        "title": "Valid"
                    },
                    "company_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Company Name"
                    },
                    "inviter_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Inviter Name"
                    },
                    "email": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Email"
                    },
                    "role": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Role"
                    },
                    "expires_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Expires At"
                    }
                },
                "type": "object",
                "required": [
                    "valid"
                ],
                "title": "ValidateInviteResponse"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "ValidationErrorResponse": {
                "properties": {
                    "error_code": {
                        "type": "string",
                        "title": "Error Code",
                        "description": "Error code",
                        "default": "VALIDATION_ERROR"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message",
                        "description": "Validation error message"
                    },
                    "details": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Details",
                        "description": "Validation error details"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "ValidationErrorResponse",
                "description": "Response model for validation errors (400)."
            },
            "WaitlistSubmissionRequest": {
                "properties": {
                    "fullName": {
                        "type": "string",
                        "minLength": 2,
                        "title": "Fullname",
                        "description": "Full name of the user."
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email",
                        "description": "Email address of the user."
                    },
                    "companyName": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Companyname",
                        "description": "Company name."
                    },
                    "position": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Position",
                        "description": "User's position or role."
                    },
                    "city": {
                        "type": "string",
                        "minLength": 1,
                        "title": "City",
                        "description": "City of the user."
                    },
                    "country": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Country",
                        "description": "Country of the user."
                    }
                },
                "type": "object",
                "required": [
                    "fullName",
                    "email",
                    "companyName",
                    "position",
                    "city",
                    "country"
                ],
                "title": "WaitlistSubmissionRequest"
            },
            "WaitlistSubmissionResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "title": "Success"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "data": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "success",
                    "message"
                ],
                "title": "WaitlistSubmissionResponse"
            },
            "src__api__v1__endpoints__admin__TenantResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "updated_at",
                    "is_active"
                ],
                "title": "TenantResponse"
            },
            "src__api__v1__endpoints__auth__MessageResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "details": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Details"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "MessageResponse"
            },
            "src__api__v1__endpoints__auth__TenantResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "slug": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Slug"
                    },
                    "domain": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Domain"
                    },
                    "company_size": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Company Size"
                    },
                    "industry": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Industry"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "title": "TenantResponse"
            },
            "src__api__v1__endpoints__invites__MessageResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "details": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Details"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "MessageResponse"
            },
            "src__api__v1__endpoints__team__MessageResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "details": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Details"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "MessageResponse"
            },
            "src__api__v1__endpoints__users__MessageResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "details": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Details"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "MessageResponse"
            },
            "src__api__v1__models__responses__MessageResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message",
                        "description": "Success message"
                    },
                    "details": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Details",
                        "description": "Additional response details"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "MessageResponse",
                "description": "Standard success response with message."
            }
        },
        "securitySchemes": {
            "HTTPBearer": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}